% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/show.velocity.on.embedding.eu.R
\name{show.velocity.on.embedding.eu}
\alias{show.velocity.on.embedding.eu}
\title{Visualize RNA velocities on an existing embedding using Euclidean-based transition probability matrix within the kNN graph.}
\usage{
show.velocity.on.embedding.eu(
  emb,
  current,
  projected,
  deltaE,
  n = 30,
  embedding.knn = TRUE,
  cell.colors = NULL,
  sigma = NA,
  beta = 1,
  arrow.scale = 1,
  scale = "log",
  nPcs = NA,
  arrow.lwd = 1,
  xlab = "",
  ylab = "",
  show.grid.flow = FALSE,
  grid.n = 20,
  grid.sd = NULL,
  min.grid.cell.mass = 1,
  min.arrow.size = NULL,
  show.cell = NULL,
  max.grid.arrow.length = NULL,
  fixed.arrow.length = FALSE,
  plot.grid.points = FALSE,
  control.for.neighborhood.density = TRUE,
  cell.dist = NULL,
  return.details = FALSE,
  expression.scaling = FALSE,
  cell.border.alpha = 0.5,
  n.cores = 1,
  point.size = 3,
  arrow_size = 0.3,
  rm_uniform = TRUE,
  ...
)
}
\arguments{
\item{emb}{embedding to be used for projection}

\item{current}{current matrix}

\item{projected}{projected matrix}

\item{deltaE}{deltaE matrix}

\item{n}{neighborhood size (default=30)}

\item{embedding.knn}{pre-calculated kNN}

\item{cell.colors}{named color vector for cell plotting}

\item{sigma}{sigma to use in calculating transition probability from the eucledian distance (estimated automatically by default)}

\item{beta}{beta parameter used in calculation of transition probability (by default=1)}

\item{arrow.scale}{additional scaling factor for the arrows (default=1)}

\item{scale}{scale to use in calculating distances (default: 'log', also supported 'sqrt'}

\item{nPcs}{number of PCs to project the cells onto (to perform distance calculations in lower dimensions), default=NA which turns off PCA dimensional reduction}

\item{arrow.lwd}{arrow line width}

\item{xlab}{x axis label}

\item{ylab}{y axis label}

\item{show.grid.flow}{whether to show grid velocity summary}

\item{grid.n}{number of grid points along each axis}

\item{grid.sd}{standard deviation (in embedding coordinate space) used to determine the weighting of individual cells around each grid point}

\item{min.grid.cell.mass}{minimal cell "mass" (weighted number of cells) around each grid point required for it to show up}

\item{min.arrow.size}{minimal arrow size}

\item{show.cell}{whether to show detailed velocity estimates for a specified cell}

\item{max.grid.arrow.length}{minimal arrow size}

\item{fixed.arrow.length}{whether to use fixed arrow width (default=FALSE)}

\item{plot.grid.points}{whether to mark all grid points with dots (even if they don't have valid velocities)}

\item{control.for.neighborhood.density}{compensate for cell density variations in the embedding (default: TRUE)}

\item{cell.dist}{\itemize{
\item optional custom distance (must include all of the cells that are intersecting between emb and vel)
}}

\item{return.details}{whether to return detailed output (which can be passed to p1 app for visualization)}

\item{expression.scaling}{whether to scale the velocity length by the projection of velocity onto the expected expression change (based on the transition probability matrix)}

\item{cell.border.alpha}{trasparency parameter to apply when showing cell colors}

\item{n.cores}{number of cores to use in calculations}

\item{point.size}{size of the point}

\item{arrow_size}{size of arrow}

\item{rm_uniform}{whether discard the uniform}

\item{...}{extra parameters are passed to the plot() function}
}
\value{
transition probability matrix
}
\description{
based on Euclidean distance of the extrapolated cell to others
The direction of the arrow is towards n closest neighbors. The magnitude of the arrow is determined by the cosine projection of the velocity on to the chosen direction
n=1 will only show arrows for cells that end up being projected closer to some other cell than to the original position
n=k (k>1) will show an average direction
Given an expression distance between cells d, and ratio of extrapolated to current expression distances between cells f, the transition probability is calculated as exp(- (d*(f^beta))^2/(2*sigma^2) )
}
